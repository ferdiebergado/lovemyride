services:
  app:
    build:
      context: .
      target: ${GO_ENV}
    container_name: lovemyride-app
    env_file:
      - ./.env.development
    depends_on:
      migrate:
        condition: service_completed_successfully
    networks:
      - lovemyride-network
    volumes:
      - .:/app:Z

  # PostgreSQL Database Service
  db:
    image: postgres:17.0-alpine3.20
    container_name: lovemyride-db
    shm_size: 128mb
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    env_file:
      - ./.env.development
    healthcheck:
      test: [CMD-SHELL, "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./configs/postgresql.conf:/etc/postgresql/postgresql.conf:Z
      - ./configs/psqlrc:/root/.psqlrc:Z
    ports:
      - "5432:5432"
    restart: always
    networks:
      - lovemyride-network

  # Nginx Reverse Proxy Service
  proxy:
    image: nginx:1.27.2-alpine3.20
    container_name: lovemyride-proxy
    depends_on:
      - app
    command: ["./wait-for-app.sh"]
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:Z
      - ./web/static:/usr/share/nginx/html:Z
      - ./scripts/wait-for-app.sh:/wait-for-app.sh:Z
    ports:
      - "8080:80"
    restart: always
    networks:
      - lovemyride-network

  migrate:
    image: migrate/migrate:v4.17.1
    container_name: lovemyride-migrate
    env_file:
      - ./.env.development
    depends_on:
      db:
        condition: service_healthy
    networks:
      - lovemyride-network
    volumes:
      - ./internal/pkg/db/migrations:/migrations:Z
    command: ["-path", "/migrations/", "-database", "${DATABASE_URL}", "up"]

volumes:
  postgres_data:

networks:
  lovemyride-network:
